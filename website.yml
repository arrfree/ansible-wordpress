- name: Install Nginx with PHP and MariaDB
  hosts: all
  remote_user: arran
  become: true
  vars:
    files: files/
    files_ssl: "{{ files }}/ssl/"
    server_name: "{{ inventory_hostname }}"
    ssl_path: /etc/ssl
    cert_name: "{{ server_name }}"
    certificate: "{{ ssl_path }}/certs/{{ cert_name }}.crt"
    certificate_key: "{{ ssl_path }}/private/{{ cert_name }}.key"
    wordpress_targz: "{{ files }}/wordpress-6.3.1.tar.gz"
    wordpress_username: wordpress
    wordpress_password: wordpress
    wordpress_database: wordpress
    web_root: /var/www/html
    php_version: 8.1
  vars_prompt:
    - name: mariadb_root_password
      prompt: Enter a new MariaDB root password

  tasks:
  - name: Install Python3 MySQL
    apt:
      name: python3-mysqldb
      state: present

  - name: Install MariaDB
    apt:
      name: mariadb-server-10.6
      state: present

  - name: Remove Test db from MariaDB
    mysql_query:
      login_db: mysql
      query:
      - DROP DATABASE IF EXISTS test;
      - DELETE FROM mysql.db WHERE Db='test' OR Db='test\\_%'

  - name: Remove any remote MariaDB root account
    mysql_query:
      login_db: mysql
      query: DELETE FROM mysql.global_priv WHERE User='root' AND Host NOT IN ('localhost', '127.0.0.1', '::1');

  - name: Remove anonymous MariaDB users
    mysql_query:
      login_db: mysql
      query: DELETE FROM mysql.global_priv WHERE User='';
  
  - name: Secure MariaDB root password
    mysql_query:
      login_db: mysql
      query: "UPDATE mysql.global_priv SET priv=json_set(priv, '$.plugin', 'mysql_native_password', '$.authentication_string', PASSWORD('{{ mariadb_root_password }}')) WHERE User='root';"
  
  - name: Flush Priviledge tables
    mysql_query:
      login_db: mysql
      query: FLUSH PRIVILEGES;

  - name: Install PHP
    apt:
      name: "php{{ php_version }}-cgi"
      state: present

  - name: Install PHP-FPM
    apt:
      name: "php{{ php_version }}-fpm"
      state: present

  - name: Install PHP-mysql
    apt:
      name: "php{{ php_version }}-mysql"
      state: present

  - name: Install PHP-gd
    apt:
      name: "php{{ php_version }}-gd"
      state: present

  - name: Install Nginx
    apt:
      name: nginx-core
      state: present

  - name: Copy certificate
    copy:
      src: "{{ files_ssl }}/{{ cert_name }}.crt"
      dest: "{{ certificate }}"
    notify:
      - Reload Nginx
  
  - name: Copy certificate key
    copy:
      src: "{{ files_ssl }}/{{ cert_name }}.key"
      dest: "{{ certificate_key }}"
    notify:
      - Reload Nginx

  - name: Generate Nginx config
    template:
      src: "{{ files }}/nginx-wordpress.j2"
      dest: "/etc/nginx/sites-available/{{ server_name }}"
      owner: root
      group: root
      mode: '0644'
    notify:
      - Reload Nginx

  - name: Symlink Nginx config
    file:
      src: "/etc/nginx/sites-available/{{ server_name }}"
      dest: "/etc/nginx/sites-enabled/{{ server_name }}"
      state: link
    notify:
      - Reload Nginx

  - name: Unlink Nginx default site
    file:
      path: "/etc/nginx/sites-enabled/default"
      state: absent
    notify:
      - Reload Nginx

  - name: Copy index.php
    copy:
      src: "{{ files }}/index.php"
      dest: "{{ web_root }}/index.php"

  - name: Copy & Extract Wordpress archive
    ansible.builtin.unarchive:
      src: "{{ wordpress_targz }}"
      dest: "{{ web_root }}/"

  - name: Create Wordpress database
    mysql_db:
      name:
        - "{{ wordpress_database }}"
      state: present

  - name: Create Wordpress user & apply permissions
    mysql_user:
      name: "{{ wordpress_username }}"
      host: localhost
      password: "{{ wordpress_password }}"
      priv: "{{ wordpress_database }}.*:ALL"
      state: present
        
  handlers:
    - name: Reload Nginx
      systemd:
        name: nginx.service
        state: reloaded
